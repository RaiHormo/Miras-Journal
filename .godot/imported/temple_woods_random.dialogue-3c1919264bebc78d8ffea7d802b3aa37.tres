[gd_resource type="Resource" script_class="DialogueResource" load_steps=2 format=3]

[ext_resource type="Script" path="res://addons/dialogue_manager/dialogue_resource.gd" id="1_ue5dc"]

[resource]
script = ExtResource("1_ue5dc")
using_states = PackedStringArray()
titles = {
"a_bridge": "132",
"amazing": "92",
"approach": "23",
"as_lost_as_you": "31",
"cant_dash_on_flame": "15",
"getting_dark": "2",
"going_nowhere": "87",
"good_on_you": "41",
"got_through_that": "98",
"haha": "36",
"hey_wait": "19",
"im_not_gonna_harm_you": "27",
"not_going_well": "82",
"skeleton": "49",
"statue_legs": "76",
"stay_back": "45",
"symbol": "58",
"that_should_do_it": "6",
"use_name": "128",
"was_that_a": "10",
"what_about": "109"
}
character_names = PackedStringArray("Mira.Neutural", "Mira.OpenMouth", "Mira.Smile", "Alcine", "Mira")
first_title = "2"
lines = {
"1": {
"id": "1",
"next_id": "2",
"text": "getting_dark",
"type": "title"
},
"10": {
"character": "",
"character_replacements": Array[Dictionary]([]),
"id": "10",
"next_id": "11",
"notes": "",
"tags": PackedStringArray(),
"text": "It... ran away?[wait=0.4]
Was that another monster?",
"text_replacements": Array[Dictionary]([]),
"translation_key": "It... ran away?[wait=0.4]
Was that another monster?",
"type": "dialogue"
},
"100": {
"character": "Mira.Neutural",
"character_replacements": Array[Dictionary]([]),
"id": "100",
"next_id": "101",
"notes": "",
"tags": PackedStringArray(),
"text": "We should stick together for now, [wait=0.5]umm...",
"text_replacements": Array[Dictionary]([]),
"translation_key": "We should stick together for now, [wait=0.5]umm...",
"type": "dialogue"
},
"101": {
"character": "Mira.Neutural",
"character_replacements": Array[Dictionary]([]),
"id": "101",
"next_id": "102",
"notes": "",
"tags": PackedStringArray(),
"text": "Wait, do you have a name?",
"text_replacements": Array[Dictionary]([]),
"translation_key": "Wait, do you have a name?",
"type": "dialogue"
},
"102": {
"character": "",
"character_replacements": Array[Dictionary]([]),
"id": "102",
"next_id": "103",
"notes": "",
"tags": PackedStringArray(),
"text": "[next=auto]",
"text_replacements": Array[Dictionary]([]),
"translation_key": "[next=auto]",
"type": "dialogue"
},
"103": {
"id": "103",
"mutation": {
"expression": Array[Dictionary]([{
"function": "bubble",
"type": "function",
"value": Array[Array]([Array[Dictionary]([{
"type": "string",
"value": "Question"
}]), Array[Dictionary]([{
"type": "string",
"value": "Alcine"
}])])
}])
},
"next_id": "104",
"type": "mutation"
},
"104": {
"character": "",
"character_replacements": Array[Dictionary]([]),
"id": "104",
"next_id": "105",
"notes": "",
"tags": PackedStringArray(),
"text": "[wait=1] [next=auto]",
"text_replacements": Array[Dictionary]([]),
"translation_key": "[wait=1] [next=auto]",
"type": "dialogue"
},
"105": {
"character": "Mira.Neutural",
"character_replacements": Array[Dictionary]([]),
"id": "105",
"next_id": "106",
"notes": "",
"tags": PackedStringArray(),
"text": "Oh right, you can't talk.
But I need to call you something...",
"text_replacements": Array[Dictionary]([]),
"translation_key": "Oh right, you can't talk.
But I need to call you something...",
"type": "dialogue"
},
"106": {
"character": "Mira.Neutural",
"character_replacements": Array[Dictionary]([]),
"id": "106",
"next_id": "109",
"notes": "",
"tags": PackedStringArray(),
"text": "Ok, I'll come up with a name and you tell me if you like it. Alright?",
"text_replacements": Array[Dictionary]([]),
"translation_key": "Ok, I'll come up with a name and you tell me if you like it. Alright?",
"type": "dialogue"
},
"108": {
"id": "108",
"next_id": "109",
"text": "what_about",
"type": "title"
},
"109": {
"condition": {
"expression": Array[Dictionary]([{
"function": "find_member",
"type": "function",
"value": Array[Array]([Array[Dictionary]([{
"type": "string",
"value": "Alcine"
}])])
}, {
"type": "dot"
}, {
"type": "variable",
"value": "FirstName"
}, {
"type": "comparison",
"value": "=="
}, {
"type": "string",
"value": "Alcine"
}, {
"type": "colon"
}])
},
"id": "109",
"next_conditional_id": "114",
"next_id": "110",
"next_id_after": "125",
"type": "condition"
},
"11": {
"character": "",
"character_replacements": Array[Dictionary]([]),
"id": "11",
"next_id": "12",
"notes": "",
"tags": PackedStringArray(),
"text": "Maybe I should follow it.",
"text_replacements": Array[Dictionary]([]),
"translation_key": "Maybe I should follow it.",
"type": "dialogue"
},
"110": {
"character": "",
"character_replacements": Array[Dictionary]([]),
"id": "110",
"next_id": "111",
"notes": "",
"parent_id": "109",
"tags": PackedStringArray(),
"text": "\"Alcine\". I think that's the best name I can think of.",
"text_replacements": Array[Dictionary]([]),
"translation_key": "\"Alcine\". I think that's the best name I can think of.",
"type": "dialogue"
},
"111": {
"character": "",
"character_replacements": Array[Dictionary]([]),
"id": "111",
"next_id": "112",
"next_id_after": "125",
"notes": "",
"parent_id": "109",
"responses": PackedStringArray("111", "113"),
"tags": PackedStringArray(),
"text": "Use this name",
"text_replacements": Array[Dictionary]([]),
"translation_key": "Use this name",
"type": "response"
},
"112": {
"id": "112",
"is_snippet": false,
"next_id": "128",
"parent_id": "111",
"type": "goto"
},
"113": {
"character": "",
"character_replacements": Array[Dictionary]([]),
"id": "113",
"next_id": "125",
"next_id_after": "125",
"notes": "",
"parent_id": "109",
"tags": PackedStringArray(),
"text": "Let's rethink this",
"text_replacements": Array[Dictionary]([]),
"translation_key": "Let's rethink this",
"type": "response"
},
"114": {
"condition": {
"expression": Array[Dictionary]([{
"type": "string",
"value": "Mira"
}, {
"type": "comparison",
"value": "in"
}, {
"function": "find_member",
"type": "function",
"value": Array[Array]([Array[Dictionary]([{
"type": "string",
"value": "Alcine"
}])])
}, {
"type": "dot"
}, {
"type": "variable",
"value": "FirstName"
}, {
"type": "and_or",
"value": "or"
}, {
"type": "string",
"value": "Levenor"
}, {
"type": "comparison",
"value": "in"
}, {
"function": "find_member",
"type": "function",
"value": Array[Array]([Array[Dictionary]([{
"type": "string",
"value": "Alcine"
}])])
}, {
"type": "dot"
}, {
"type": "variable",
"value": "FirstName"
}, {
"type": "colon"
}])
},
"id": "114",
"next_conditional_id": "116",
"next_id": "115",
"next_id_after": "125",
"type": "condition"
},
"115": {
"character": "",
"character_replacements": Array[Dictionary]([]),
"id": "115",
"next_id": "125",
"notes": "",
"parent_id": "114",
"tags": PackedStringArray(),
"text": "Name them after me? That might get confusing easily, let's rethink this.",
"text_replacements": Array[Dictionary]([]),
"translation_key": "Name them after me? That might get confusing easily, let's rethink this.",
"type": "dialogue"
},
"116": {
"condition": {
"expression": Array[Dictionary]([{
"function": "str_length",
"type": "function",
"value": Array[Array]([Array[Dictionary]([{
"function": "find_member",
"type": "function",
"value": Array[Array]([Array[Dictionary]([{
"type": "string",
"value": "Alcine"
}])])
}, {
"type": "dot"
}, {
"type": "variable",
"value": "FirstName"
}])])
}, {
"type": "comparison",
"value": ">"
}, {
"type": "number",
"value": 12
}, {
"type": "colon"
}])
},
"id": "116",
"next_conditional_id": "118",
"next_id": "117",
"next_id_after": "125",
"type": "condition"
},
"117": {
"character": "",
"character_replacements": Array[Dictionary]([]),
"id": "117",
"next_id": "125",
"notes": "",
"parent_id": "116",
"tags": PackedStringArray(),
"text": "Isn't that a bit too long? Let's try something shorter.",
"text_replacements": Array[Dictionary]([]),
"translation_key": "Isn't that a bit too long? Let's try something shorter.",
"type": "dialogue"
},
"118": {
"condition": {
"expression": Array[Dictionary]([{
"function": "str_length",
"type": "function",
"value": Array[Array]([Array[Dictionary]([{
"function": "find_member",
"type": "function",
"value": Array[Array]([Array[Dictionary]([{
"type": "string",
"value": "Alcine"
}])])
}, {
"type": "dot"
}, {
"type": "variable",
"value": "FirstName"
}])])
}, {
"type": "comparison",
"value": "=="
}, {
"type": "number",
"value": 1
}, {
"type": "colon"
}])
},
"id": "118",
"next_conditional_id": "120",
"next_id": "119",
"next_id_after": "125",
"type": "condition"
},
"119": {
"character": "",
"character_replacements": Array[Dictionary]([]),
"id": "119",
"next_id": "125",
"notes": "",
"parent_id": "118",
"tags": PackedStringArray(),
"text": "Let's try to be a little more creative.",
"text_replacements": Array[Dictionary]([]),
"translation_key": "Let's try to be a little more creative.",
"type": "dialogue"
},
"12": {
"id": "12",
"is_snippet": false,
"next_id": "end",
"type": "goto"
},
"120": {
"id": "120",
"next_conditional_id": "125",
"next_id": "121",
"next_id_after": "125",
"type": "condition"
},
"121": {
"character": "",
"character_replacements": Array[Dictionary]([]),
"id": "121",
"next_id": "122",
"notes": "",
"parent_id": "120",
"tags": PackedStringArray(),
"text": "\"{{find_member(\"Alcine\").FirstName}}\". Should I go with this?",
"text_replacements": Array[Dictionary]([{
"expression": Array[Dictionary]([{
"function": "find_member",
"type": "function",
"value": Array[Array]([Array[Dictionary]([{
"type": "string",
"value": "Alcine"
}])])
}, {
"type": "dot"
}, {
"type": "variable",
"value": "FirstName"
}]),
"value_in_text": "{{find_member(\"Alcine\").FirstName}}"
}]),
"translation_key": "\"{{find_member(\"Alcine\").FirstName}}\". Should I go with this?",
"type": "dialogue"
},
"122": {
"character": "",
"character_replacements": Array[Dictionary]([]),
"id": "122",
"next_id": "123",
"next_id_after": "125",
"notes": "",
"parent_id": "120",
"responses": PackedStringArray("122", "124"),
"tags": PackedStringArray(),
"text": "Use this name",
"text_replacements": Array[Dictionary]([]),
"translation_key": "Use this name",
"type": "response"
},
"123": {
"id": "123",
"is_snippet": false,
"next_id": "128",
"parent_id": "122",
"type": "goto"
},
"124": {
"character": "",
"character_replacements": Array[Dictionary]([]),
"id": "124",
"next_id": "125",
"next_id_after": "125",
"notes": "",
"parent_id": "120",
"tags": PackedStringArray(),
"text": "Let's rethink this",
"text_replacements": Array[Dictionary]([]),
"translation_key": "Let's rethink this",
"type": "response"
},
"125": {
"id": "125",
"is_snippet": false,
"next_id": "109",
"type": "goto"
},
"127": {
"id": "127",
"next_id": "128",
"text": "use_name",
"type": "title"
},
"128": {
"character": "Mira",
"character_replacements": Array[Dictionary]([]),
"id": "128",
"next_id": "129",
"notes": "",
"tags": PackedStringArray(),
"text": "What about \"{{find_member(\"Alcine\").FirstName}}\"?",
"text_replacements": Array[Dictionary]([{
"expression": Array[Dictionary]([{
"function": "find_member",
"type": "function",
"value": Array[Array]([Array[Dictionary]([{
"type": "string",
"value": "Alcine"
}])])
}, {
"type": "dot"
}, {
"type": "variable",
"value": "FirstName"
}]),
"value_in_text": "{{find_member(\"Alcine\").FirstName}}"
}]),
"translation_key": "What about \"{{find_member(\"Alcine\").FirstName}}\"?",
"type": "dialogue"
},
"129": {
"id": "129",
"is_snippet": false,
"next_id": "end",
"type": "goto"
},
"131": {
"id": "131",
"next_id": "132",
"text": "a_bridge",
"type": "title"
},
"132": {
"character": "Mira.Neutural",
"character_replacements": Array[Dictionary]([]),
"id": "132",
"next_id": "133",
"notes": "",
"tags": PackedStringArray(),
"text": "Oh a bridge.",
"text_replacements": Array[Dictionary]([]),
"translation_key": "Oh a bridge.",
"type": "dialogue"
},
"133": {
"character": "Mira.Neutural",
"character_replacements": Array[Dictionary]([]),
"id": "133",
"next_id": "134",
"notes": "",
"tags": PackedStringArray(),
"text": "Seems like this is our way out of this forest.",
"text_replacements": Array[Dictionary]([]),
"translation_key": "Seems like this is our way out of this forest.",
"type": "dialogue"
},
"134": {
"id": "134",
"is_snippet": false,
"next_id": "end",
"type": "goto"
},
"14": {
"id": "14",
"next_id": "15",
"text": "cant_dash_on_flame",
"type": "title"
},
"15": {
"character": "Mira.Neutural",
"character_replacements": Array[Dictionary]([]),
"id": "15",
"next_id": "16",
"notes": "",
"tags": PackedStringArray(),
"text": "I can't dash and hold this flame at the same time.[next=4]",
"text_replacements": Array[Dictionary]([]),
"translation_key": "I can't dash and hold this flame at the same time.[next=4]",
"type": "dialogue"
},
"16": {
"id": "16",
"is_snippet": false,
"next_id": "end",
"type": "goto"
},
"18": {
"id": "18",
"next_id": "19",
"text": "hey_wait",
"type": "title"
},
"19": {
"character": "Mira.OpenMouth",
"character_replacements": Array[Dictionary]([]),
"id": "19",
"next_id": "20",
"notes": "",
"tags": PackedStringArray(),
"text": "Hey wait![next=2]",
"text_replacements": Array[Dictionary]([]),
"translation_key": "Hey wait![next=2]",
"type": "dialogue"
},
"2": {
"character": "",
"character_replacements": Array[Dictionary]([]),
"id": "2",
"next_id": "3",
"notes": "",
"tags": PackedStringArray(),
"text": "...It's getting a little dark.",
"text_replacements": Array[Dictionary]([]),
"translation_key": "...It's getting a little dark.",
"type": "dialogue"
},
"20": {
"id": "20",
"is_snippet": false,
"next_id": "end",
"type": "goto"
},
"22": {
"id": "22",
"next_id": "23",
"text": "approach",
"type": "title"
},
"23": {
"character": "",
"character_replacements": Array[Dictionary]([]),
"id": "23",
"next_id": "24",
"notes": "",
"tags": PackedStringArray(),
"text": "It seems scared of me...",
"text_replacements": Array[Dictionary]([]),
"translation_key": "It seems scared of me...",
"type": "dialogue"
},
"24": {
"id": "24",
"is_snippet": false,
"next_id": "end",
"type": "goto"
},
"26": {
"id": "26",
"next_id": "27",
"text": "im_not_gonna_harm_you",
"type": "title"
},
"27": {
"character": "Mira.Smile",
"character_replacements": Array[Dictionary]([]),
"id": "27",
"next_id": "28",
"notes": "",
"tags": PackedStringArray(),
"text": "Come on, it's all fine. I don't want to harm you.",
"text_replacements": Array[Dictionary]([]),
"translation_key": "Come on, it's all fine. I don't want to harm you.",
"type": "dialogue"
},
"28": {
"id": "28",
"is_snippet": false,
"next_id": "end",
"type": "goto"
},
"3": {
"id": "3",
"is_snippet": false,
"next_id": "end",
"type": "goto"
},
"30": {
"id": "30",
"next_id": "31",
"text": "as_lost_as_you",
"type": "title"
},
"31": {
"character": "Mira.Neutural",
"character_replacements": Array[Dictionary]([]),
"id": "31",
"next_id": "32",
"notes": "",
"tags": PackedStringArray(),
"text": "I guess you're just as lost.",
"text_replacements": Array[Dictionary]([]),
"translation_key": "I guess you're just as lost.",
"type": "dialogue"
},
"32": {
"character": "Mira.OpenMouth",
"character_replacements": Array[Dictionary]([]),
"id": "32",
"next_id": "33",
"notes": "",
"tags": PackedStringArray(),
"text": "This forest is not safe, we should look for a way out.",
"text_replacements": Array[Dictionary]([]),
"translation_key": "This forest is not safe, we should look for a way out.",
"type": "dialogue"
},
"33": {
"id": "33",
"is_snippet": false,
"next_id": "end",
"type": "goto"
},
"35": {
"id": "35",
"next_id": "36",
"text": "haha",
"type": "title"
},
"36": {
"character": "Mira.Smile",
"character_replacements": Array[Dictionary]([]),
"id": "36",
"next_id": "37",
"notes": "",
"tags": PackedStringArray(),
"text": "Haha, you can have that if you want!",
"text_replacements": Array[Dictionary]([]),
"translation_key": "Haha, you can have that if you want!",
"type": "dialogue"
},
"37": {
"character": "Mira.Smile",
"character_replacements": Array[Dictionary]([]),
"id": "37",
"next_id": "38",
"notes": "",
"tags": PackedStringArray(),
"text": "Here.",
"text_replacements": Array[Dictionary]([]),
"translation_key": "Here.",
"type": "dialogue"
},
"38": {
"id": "38",
"is_snippet": false,
"next_id": "end",
"type": "goto"
},
"40": {
"id": "40",
"next_id": "41",
"text": "good_on_you",
"type": "title"
},
"41": {
"character": "Mira.Smile",
"character_replacements": Array[Dictionary]([]),
"id": "41",
"next_id": "42",
"notes": "",
"tags": PackedStringArray(),
"text": "Looks good on you!",
"text_replacements": Array[Dictionary]([]),
"translation_key": "Looks good on you!",
"type": "dialogue"
},
"42": {
"id": "42",
"is_snippet": false,
"next_id": "end",
"type": "goto"
},
"44": {
"id": "44",
"next_id": "45",
"text": "stay_back",
"type": "title"
},
"45": {
"character": "Mira.OpenMouth",
"character_replacements": Array[Dictionary]([]),
"id": "45",
"next_id": "46",
"notes": "",
"tags": PackedStringArray(),
"text": "You stay behind me,
I'll deal with it!",
"text_replacements": Array[Dictionary]([]),
"translation_key": "You stay behind me,
I'll deal with it!",
"type": "dialogue"
},
"46": {
"id": "46",
"is_snippet": false,
"next_id": "end!",
"type": "goto"
},
"48": {
"id": "48",
"next_id": "49",
"text": "skeleton",
"type": "title"
},
"49": {
"condition": {
"expression": Array[Dictionary]([{
"type": "not"
}, {
"function": "f",
"type": "function",
"value": Array[Array]([Array[Dictionary]([{
"type": "string",
"value": "LookedAtSkeleton"
}])])
}, {
"type": "colon"
}])
},
"id": "49",
"next_conditional_id": "53",
"next_id": "50",
"next_id_after": "55",
"type": "condition"
},
"5": {
"id": "5",
"next_id": "6",
"text": "that_should_do_it",
"type": "title"
},
"50": {
"id": "50",
"mutation": {
"expression": Array[Dictionary]([{
"function": "f",
"type": "function",
"value": Array[Array]([Array[Dictionary]([{
"type": "string",
"value": "LookedAtSkeleton"
}]), Array[Dictionary]([{
"type": "variable",
"value": "true"
}])])
}])
},
"next_id": "51",
"parent_id": "49",
"type": "mutation"
},
"51": {
"character": "",
"character_replacements": Array[Dictionary]([]),
"id": "51",
"next_id": "52",
"notes": "",
"parent_id": "49",
"tags": PackedStringArray(),
"text": "...There's no mistaking it, that's a skeleton.",
"text_replacements": Array[Dictionary]([]),
"translation_key": "...There's no mistaking it, that's a skeleton.",
"type": "dialogue"
},
"52": {
"character": "",
"character_replacements": Array[Dictionary]([]),
"id": "52",
"next_id": "55",
"notes": "",
"parent_id": "49",
"tags": PackedStringArray(),
"text": "From the skull shape it seems human, but I don't want to look at it more than I have to.",
"text_replacements": Array[Dictionary]([]),
"translation_key": "From the skull shape it seems human, but I don't want to look at it more than I have to.",
"type": "dialogue"
},
"53": {
"id": "53",
"next_conditional_id": "55",
"next_id": "54",
"next_id_after": "55",
"type": "condition"
},
"54": {
"character": "",
"character_replacements": Array[Dictionary]([]),
"id": "54",
"next_id": "55",
"notes": "",
"parent_id": "53",
"tags": PackedStringArray(),
"text": "...Let's just move on.",
"text_replacements": Array[Dictionary]([]),
"translation_key": "...Let's just move on.",
"type": "dialogue"
},
"55": {
"id": "55",
"is_snippet": false,
"next_id": "end!",
"type": "goto"
},
"57": {
"id": "57",
"next_id": "58",
"text": "symbol",
"type": "title"
},
"58": {
"condition": {
"expression": Array[Dictionary]([{
"function": "flag_int",
"type": "function",
"value": Array[Array]([Array[Dictionary]([{
"type": "string",
"value": "LookedAtTempleSymbol"
}])])
}, {
"type": "comparison",
"value": "=="
}, {
"type": "number",
"value": 0
}, {
"type": "colon"
}])
},
"id": "58",
"next_conditional_id": "64",
"next_id": "59",
"next_id_after": "73",
"type": "condition"
},
"59": {
"id": "59",
"mutation": {
"expression": Array[Dictionary]([{
"function": "flag_progress",
"type": "function",
"value": Array[Array]([Array[Dictionary]([{
"type": "string",
"value": "LookedAtTempleSymbol"
}]), Array[Dictionary]([{
"type": "number",
"value": 1
}])])
}])
},
"next_id": "60",
"parent_id": "58",
"type": "mutation"
},
"6": {
"character": "",
"character_replacements": Array[Dictionary]([]),
"id": "6",
"next_id": "7",
"notes": "",
"tags": PackedStringArray(),
"text": "That should do it.",
"text_replacements": Array[Dictionary]([]),
"translation_key": "That should do it.",
"type": "dialogue"
},
"60": {
"character": "",
"character_replacements": Array[Dictionary]([]),
"id": "60",
"next_id": "61",
"notes": "",
"parent_id": "58",
"tags": PackedStringArray(),
"text": "There is a symbol engraved on the ground.",
"text_replacements": Array[Dictionary]([]),
"translation_key": "There is a symbol engraved on the ground.",
"type": "dialogue"
},
"61": {
"character": "",
"character_replacements": Array[Dictionary]([]),
"id": "61",
"next_id": "62",
"notes": "",
"parent_id": "58",
"tags": PackedStringArray(),
"text": "Looks like some sort of bird... with a clover head?",
"text_replacements": Array[Dictionary]([]),
"translation_key": "Looks like some sort of bird... with a clover head?",
"type": "dialogue"
},
"62": {
"character": "",
"character_replacements": Array[Dictionary]([]),
"id": "62",
"next_id": "63",
"notes": "",
"parent_id": "58",
"tags": PackedStringArray(),
"text": "...",
"text_replacements": Array[Dictionary]([]),
"translation_key": "...",
"type": "dialogue"
},
"63": {
"character": "",
"character_replacements": Array[Dictionary]([]),
"id": "63",
"next_id": "73",
"notes": "",
"parent_id": "58",
"tags": PackedStringArray(),
"text": "I just noticed that it's not perfectly symmetrical, which makes looking at it increasingly painful.",
"text_replacements": Array[Dictionary]([]),
"translation_key": "I just noticed that it's not perfectly symmetrical, which makes looking at it increasingly painful.",
"type": "dialogue"
},
"64": {
"condition": {
"expression": Array[Dictionary]([{
"function": "flag_int",
"type": "function",
"value": Array[Array]([Array[Dictionary]([{
"type": "string",
"value": "LookedAtTempleSymbol"
}])])
}, {
"type": "comparison",
"value": "=="
}, {
"type": "number",
"value": 1
}, {
"type": "colon"
}])
},
"id": "64",
"next_conditional_id": "67",
"next_id": "65",
"next_id_after": "73",
"type": "condition"
},
"65": {
"id": "65",
"mutation": {
"expression": Array[Dictionary]([{
"function": "flag_progress",
"type": "function",
"value": Array[Array]([Array[Dictionary]([{
"type": "string",
"value": "LookedAtTempleSymbol"
}]), Array[Dictionary]([{
"type": "number",
"value": 2
}])])
}])
},
"next_id": "66",
"parent_id": "64",
"type": "mutation"
},
"66": {
"character": "",
"character_replacements": Array[Dictionary]([]),
"id": "66",
"next_id": "73",
"notes": "",
"parent_id": "64",
"tags": PackedStringArray(),
"text": "The pain grows.",
"text_replacements": Array[Dictionary]([]),
"translation_key": "The pain grows.",
"type": "dialogue"
},
"67": {
"condition": {
"expression": Array[Dictionary]([{
"function": "flag_int",
"type": "function",
"value": Array[Array]([Array[Dictionary]([{
"type": "string",
"value": "LookedAtTempleSymbol"
}])])
}, {
"type": "comparison",
"value": "=="
}, {
"type": "number",
"value": 2
}, {
"type": "colon"
}])
},
"id": "67",
"next_conditional_id": "71",
"next_id": "68",
"next_id_after": "73",
"type": "condition"
},
"68": {
"id": "68",
"mutation": {
"expression": Array[Dictionary]([{
"function": "flag_progress",
"type": "function",
"value": Array[Array]([Array[Dictionary]([{
"type": "string",
"value": "LookedAtTempleSymbol"
}]), Array[Dictionary]([{
"type": "number",
"value": 3
}])])
}])
},
"next_id": "69",
"parent_id": "67",
"type": "mutation"
},
"69": {
"character": "",
"character_replacements": Array[Dictionary]([]),
"id": "69",
"next_id": "70",
"notes": "",
"parent_id": "67",
"tags": PackedStringArray(),
"text": "This place seems like an old abandoned temple, so this must be some sort of religious symbol.",
"text_replacements": Array[Dictionary]([]),
"translation_key": "This place seems like an old abandoned temple, so this must be some sort of religious symbol.",
"type": "dialogue"
},
"7": {
"id": "7",
"is_snippet": false,
"next_id": "end",
"type": "goto"
},
"70": {
"character": "",
"character_replacements": Array[Dictionary]([]),
"id": "70",
"next_id": "73",
"notes": "",
"parent_id": "67",
"tags": PackedStringArray(),
"text": "I don't recall ever seeing something like it though.",
"text_replacements": Array[Dictionary]([]),
"translation_key": "I don't recall ever seeing something like it though.",
"type": "dialogue"
},
"71": {
"id": "71",
"next_conditional_id": "73",
"next_id": "72",
"next_id_after": "73",
"type": "condition"
},
"72": {
"character": "",
"character_replacements": Array[Dictionary]([]),
"id": "72",
"next_id": "73",
"notes": "",
"parent_id": "71",
"tags": PackedStringArray(),
"text": "Let's move on, I can't stand here looking at this all day.",
"text_replacements": Array[Dictionary]([]),
"translation_key": "Let's move on, I can't stand here looking at this all day.",
"type": "dialogue"
},
"73": {
"id": "73",
"is_snippet": false,
"next_id": "end",
"type": "goto"
},
"75": {
"id": "75",
"next_id": "76",
"text": "statue_legs",
"type": "title"
},
"76": {
"character": "",
"character_replacements": Array[Dictionary]([]),
"id": "76",
"next_id": "77",
"notes": "",
"tags": PackedStringArray(),
"text": "Looks like a statue.",
"text_replacements": Array[Dictionary]([]),
"translation_key": "Looks like a statue.",
"type": "dialogue"
},
"77": {
"character": "",
"character_replacements": Array[Dictionary]([]),
"id": "77",
"next_id": "78",
"notes": "",
"tags": PackedStringArray(),
"text": "Or, to be more precise, the legs of a statue.",
"text_replacements": Array[Dictionary]([]),
"translation_key": "Or, to be more precise, the legs of a statue.",
"type": "dialogue"
},
"78": {
"character": "",
"character_replacements": Array[Dictionary]([]),
"id": "78",
"next_id": "79",
"notes": "",
"tags": PackedStringArray(),
"text": "From the shape, these seem more like human legs, but it's hard to tell.",
"text_replacements": Array[Dictionary]([]),
"translation_key": "From the shape, these seem more like human legs, but it's hard to tell.",
"type": "dialogue"
},
"79": {
"id": "79",
"is_snippet": false,
"next_id": "end",
"type": "goto"
},
"81": {
"id": "81",
"next_id": "82",
"text": "not_going_well",
"type": "title"
},
"82": {
"character": "Mira.Neutural",
"character_replacements": Array[Dictionary]([]),
"id": "82",
"next_id": "83",
"notes": "",
"tags": PackedStringArray(),
"text": "Ow, this hurts...",
"text_replacements": Array[Dictionary]([]),
"translation_key": "Ow, this hurts...",
"type": "dialogue"
},
"83": {
"character": "Mira.Neutural",
"character_replacements": Array[Dictionary]([]),
"id": "83",
"next_id": "84",
"notes": "",
"tags": PackedStringArray(),
"text": "Do I have anything that could heal me?",
"text_replacements": Array[Dictionary]([]),
"translation_key": "Do I have anything that could heal me?",
"type": "dialogue"
},
"84": {
"id": "84",
"is_snippet": false,
"next_id": "end",
"type": "goto"
},
"86": {
"id": "86",
"next_id": "87",
"text": "going_nowhere",
"type": "title"
},
"87": {
"character": "Mira.Neutural",
"character_replacements": Array[Dictionary]([]),
"id": "87",
"next_id": "88",
"notes": "",
"tags": PackedStringArray(),
"text": "If this goes on...",
"text_replacements": Array[Dictionary]([]),
"translation_key": "If this goes on...",
"type": "dialogue"
},
"88": {
"character": "Mira.Neutural",
"character_replacements": Array[Dictionary]([]),
"id": "88",
"next_id": "89",
"notes": "",
"tags": PackedStringArray(),
"text": "Hey, I think we might have to run away!",
"text_replacements": Array[Dictionary]([]),
"translation_key": "Hey, I think we might have to run away!",
"type": "dialogue"
},
"89": {
"id": "89",
"is_snippet": false,
"next_id": "end",
"type": "goto"
},
"9": {
"id": "9",
"next_id": "10",
"text": "was_that_a",
"type": "title"
},
"91": {
"id": "91",
"next_id": "92",
"text": "amazing",
"type": "title"
},
"92": {
"character": "Mira.Neutural",
"character_replacements": Array[Dictionary]([]),
"id": "92",
"next_id": "93",
"notes": "",
"tags": PackedStringArray(),
"text": "Woah, you can use healing magic!?",
"text_replacements": Array[Dictionary]([]),
"translation_key": "Woah, you can use healing magic!?",
"type": "dialogue"
},
"93": {
"character": "Mira.Neutural",
"character_replacements": Array[Dictionary]([]),
"id": "93",
"next_id": "94",
"notes": "",
"tags": PackedStringArray(),
"text": "We might have a chance like this!",
"text_replacements": Array[Dictionary]([]),
"translation_key": "We might have a chance like this!",
"type": "dialogue"
},
"94": {
"character": "Alcine",
"character_replacements": Array[Dictionary]([]),
"id": "94",
"next_id": "95",
"notes": "",
"tags": PackedStringArray(),
"text": "(happy noises)",
"text_replacements": Array[Dictionary]([]),
"translation_key": "(happy noises)",
"type": "dialogue"
},
"95": {
"id": "95",
"is_snippet": false,
"next_id": "end",
"type": "goto"
},
"97": {
"id": "97",
"next_id": "98",
"text": "got_through_that",
"type": "title"
},
"98": {
"character": "Mira.Neutural",
"character_replacements": Array[Dictionary]([]),
"id": "98",
"next_id": "99",
"notes": "",
"tags": PackedStringArray(),
"text": "We should be safe now.",
"text_replacements": Array[Dictionary]([]),
"translation_key": "We should be safe now.",
"type": "dialogue"
},
"99": {
"character": "Mira.Neutural",
"character_replacements": Array[Dictionary]([]),
"id": "99",
"next_id": "100",
"notes": "",
"tags": PackedStringArray(),
"text": "If it wasn't for you, I'd be done for.",
"text_replacements": Array[Dictionary]([]),
"translation_key": "If it wasn't for you, I'd be done for.",
"type": "dialogue"
}
}
raw_text = "~ getting_dark
...It's getting a little dark.
=> END

~ that_should_do_it
That should do it.
=> END

~ was_that_a
It... ran away?[wait=0.4]\\nWas that another monster?
Maybe I should follow it.
=> END

~ cant_dash_on_flame
Mira.Neutural: I can't dash and hold this flame at the same time.[next=4]
=> END

~ hey_wait
Mira.OpenMouth: Hey wait![next=2]
=> END

~ approach
It seems scared of me...
=> END

~ im_not_gonna_harm_you
Mira.Smile: Come on, it's all fine. I don't want to harm you.
=> END

~ as_lost_as_you
Mira.Neutural: I guess you're just as lost.
Mira.OpenMouth: This forest is not safe, we should look for a way out.
=> END

~ haha
Mira.Smile: Haha, you can have that if you want!
Mira.Smile: Here.
=> END

~ good_on_you
Mira.Smile: Looks good on you!
=> END

~ stay_back
Mira.OpenMouth: You stay behind me,\\nI'll deal with it!
=> END!

~ skeleton
if not f(\"LookedAtSkeleton\"):
	do f(\"LookedAtSkeleton\", true)
	...There's no mistaking it, that's a skeleton.
	From the skull shape it seems human, but I don't want to look at it more than I have to.
else: 
	...Let's just move on.
=> END!

~ symbol
if flag_int(\"LookedAtTempleSymbol\") == 0:
	do flag_progress(\"LookedAtTempleSymbol\", 1)
	There is a symbol engraved on the ground.
	Looks like some sort of bird... with a clover head?
	...
	I just noticed that it's not perfectly symmetrical, which makes looking at it increasingly painful.
elif flag_int(\"LookedAtTempleSymbol\") == 1: 
	do flag_progress(\"LookedAtTempleSymbol\", 2)
	The pain grows.
elif flag_int(\"LookedAtTempleSymbol\") == 2:
	do flag_progress(\"LookedAtTempleSymbol\", 3)
	This place seems like an old abandoned temple, so this must be some sort of religious symbol.
	I don't recall ever seeing something like it though.
else: 
	Let's move on, I can't stand here looking at this all day.
=> END

~ statue_legs
Looks like a statue.
Or, to be more precise, the legs of a statue.
From the shape, these seem more like human legs, but it's hard to tell.
=> END

~ not_going_well
Mira.Neutural: Ow, this hurts...
Mira.Neutural: Do I have anything that could heal me?
=> END

~ going_nowhere
Mira.Neutural: If this goes on...
Mira.Neutural: Hey, I think we might have to run away!
=> END

~ amazing
Mira.Neutural: Woah, you can use healing magic!?
Mira.Neutural: We might have a chance like this!
Alcine: (happy noises)
=> END

~ got_through_that
Mira.Neutural: We should be safe now.
Mira.Neutural: If it wasn't for you, I'd be done for.
Mira.Neutural: We should stick together for now, [wait=0.5]umm...
Mira.Neutural: Wait, do you have a name?
 [next=auto]
do bubble(\"Question\", \"Alcine\")
[wait=1] [next=auto]
Mira.Neutural: Oh right, you can't talk.\\nBut I need to call you something...
Mira.Neutural: Ok, I'll come up with a name and you tell me if you like it. Alright?

~ what_about
if find_member(\"Alcine\").FirstName == \"Alcine\":
	\"Alcine\". I think that's the best name I can think of.
	- Use this name
		=> use_name
	- Let's rethink this
elif \"Mira\" in find_member(\"Alcine\").FirstName or \"Levenor\" in find_member(\"Alcine\").FirstName:
	Name them after me? That might get confusing easily, let's rethink this.
elif str_length(find_member(\"Alcine\").FirstName) > 12:
	Isn't that a bit too long? Let's try something shorter.
elif str_length(find_member(\"Alcine\").FirstName) == 1:
	Let's try to be a little more creative.
else:
	\"{{find_member(\"Alcine\").FirstName}}\". Should I go with this?
	- Use this name
		=> use_name
	- Let's rethink this
=> what_about

~ use_name
Mira: What about \"{{find_member(\"Alcine\").FirstName}}\"?
=> END

~ a_bridge
Mira.Neutural: Oh a bridge.
Mira.Neutural: Seems like this is our way out of this forest.
=> END"
metadata/dialogue_manager_version = "2.33.1"
