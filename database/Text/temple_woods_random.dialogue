~ getting_dark
...It's getting a little dark.
=> END

~ that_should_do_it
This should help.
=> END

~ was_that_a
It... ran away?[wait=0.4]\nWas that another monster?
Maybe I should follow it.
=> END

~ cant_dash_on_flame
Mira.Neutural: I can't dash and hold this flame at the same time.[next=4]
=> END

~ hey_wait
Mira.OpenMouth: Hey wait![next=2]
=> END

~ approach
It seems scared...
Maybe I should try approaching it.
=> END

~ you_ok
Mira.Neutural: Hey.
=> END

~ no_harm
Mira.Smile: Don't worry, I mean no harm. 
Mira.Smile: You just seem scared, and...
=> END

~ haha
do portrait("AlcineUpset")
do next_box("Alcine")
Shewww
The creature tightly hugs me.
Their body feels like it's made of liquid...
Mira.Neutural: What are you so scared about?
do npc("Alcine").move_dir(Vector2(1,0))
do npc("Alcine").look_to(Vector2(-1,0))
Mira.Smile: Everything will be ok!
do portrait("AlcineHappy")
do next_box("Alcine")
Whimm
do Global.Player.get_node("%Flame").play("ReachOut2")
Mira.Smile: Here, you can have this.
I take a green fabric from my bag, and tie it around their neck.
=> END

~ good_on_you
Mira.Smile: Looks good on you!
=> END

~ stay_back
Mira.Neutural: Is this what scared you?
Mira.Neutural: Stay behind me,\nI'll deal with it!
=> END!

~ skeleton
if not f("LookedAtSkeleton"):
	do f("LookedAtSkeleton", true)
	...There's no mistaking it, that's a skeleton.
	From the skull shape it seems human, I think.	
else: 
	...Let's just move on.
=> END!

~ symbol
if flag_int("LookedAtTempleSymbol") == 0:
	do flag_progress("LookedAtTempleSymbol", 1)
	There is a symbol engraved on the ground.
	Looks like some sort of bird... with a clover head?
	...
	I just noticed that it's not perfectly symmetrical, which makes looking at it increasingly painful.
elif flag_int("LookedAtTempleSymbol") == 1: 
	do flag_progress("LookedAtTempleSymbol", 2)
	The pain grows.
elif flag_int("LookedAtTempleSymbol") == 2:
	do flag_progress("LookedAtTempleSymbol", 3)
	This place seems like an old abandoned temple, so this must be some sort of religious symbol.
	I don't recall ever seeing something like it though.
else: 
	Let's move on, I can't stand here looking at this all day.
=> END

~ statue_legs
if not f("LookedAtStatue"):
	do f("LookedAtStatue", true)
	Looks like a statue.
	Or, to be more precise, the legs of a statue.
else:
	do f("LookedAtStatue", false)
	I can't tell the species of whoever this satue depicted.
	But it's probably not Cyrenian or Eyvi judging from the shape.

=> END

~ not_going_well
Mira.Neutural: Ow, this hurts...
Mira.Neutural: Is there anything I can do?
=> END

~ going_nowhere
Mira.Neutural: If this goes on...
Mira.Neutural: Hey, I think we might have to run away!
=> END

~ amazing
Mira.Neutural: Woah, you can use healing magic!?
Mira.Neutural: We might have a chance like this!
Alcine.Happy: /*happy noises*/
=> END

~ got_through_that
Mira.Neutural: We should be safe now.
Mira.Neutural: If it wasn't for you, I'd be done for.
Mira.Neutural: We should stick together for now, [wait=0.5]umm...
Mira.Neutural: Wait, do you have a name?
Mira.Neutural: [next]
do bubble("Question", "Alcine")
[wait=1] [next=auto]
Mira.Neutural: Right, you can't talk.\nBut I need to call you something...
Mira.Neutural: Ok, I'll come up with a name and you tell me if you like it. Alright?

~ what_about
[wait=0.1] [next=auto]
do Global.Area.get_node("AlcineNaming").start()
if alcine() == "Alcine":
	"Alcine". I think that's the best name I can think of.
elif alcine() == "Pikachu":
	Pika pika?
elif alcine() == "Raichu":
	Rai?
elif alcine() == "Watery":
	Very straight forward.
elif alcine() == "Mario":
	I maybe I should name them Sonic instead.
elif alcine() == "Sonic":
	I'd rather just name them Mario.
elif alcine() == "Sans":
	(deep breath)[wait=1] SA-[wait=0.1][next]
	Shall I use this name?
elif alcine() == "Journal":
	And then she said "It's journaling time!" and journaled all over them.
elif alcine() == "Name":
	Name?
elif alcine() == "Gaster":
	I don't speak hands.
elif alcine() == "Luigi":
	Respectable.
elif alcine() == "Rai":
	;3
elif alcine() == "Iris":
	Truly.
elif alcine() == "Alcin":
	Silent letters are for loosers.
elif alcine() == "Chip":
	That's the way it is.
elif alcine() == "Harold":
	har har, very funny
elif alcine() == "Bob":
	The true name?
elif alcine() == "Alcinoe":
	A godly name.
elif alcine() == "Alci":
	Short and sweet.
elif alcine() == "Alc":
	Maybe too short?
elif alcine() == "Al":
	Weird.
elif alcine() == "Alcaine":
	No, too far.
elif alcine() == "Cone" or alcine() == "Alcone" or alcine() == "Alex":
	Brazy.
elif alcine() == "Creature":
	Bit on the nose?
else:
	"{{alcine()}}". Should I go with this?
- Use this name
	do Area.get_node("AlcineNaming").hide()
	=> use_name
- Let's rethink this
	=> what_about

~ use_name
Mira.Neutural: What about "{{alcine()}}"?
Alcine.Neutural: /*nod*/
do npc("P").look_to(Vector2(1, 0))
Mira.Neutural: Alright then {{alcine()}}, let's go together from here on.
=> END

~ a_bridge
Mira.Neutural: Oh a bridge.
Mira.Neutural: Seems like this is our way out of this forest.
=> END

~ first_cutscene
Placeholder description: A cutscene that isn't made yet should play here.
=> END
Placeholder description: Whenever a box like this appears, pretend you're seeing whatever is described on screen.
Placeholder description: You see a paw walk through the grass.
Placeholder description: The camera pans upwards to reveal a girl with an orange tunic and gray fur walking.
Placeholder description: She stops and looks forward.
Placeholder description: The camera cuts to a view of a forest next to a lake, and a tree in the middle.
Placeholder description: The girl sits under the tree, leaving her bag next to her.
Placeholder description: She opens the bag and takes a piece of paper. Then unfolds it.
Placeholder description: Weird scribbles are on it. She turns it around and there's an empty page.
Placeholder description: She opens a pen case in her bag and takes one pen.
I don't even know what the date is.
Today I woke up in the middle of this strange forest.
I can't recall how I got here or what I'm doing here, my memory is a fog.
Well, maybe that's not completly accurate, I can remember who I am at least.
Mira Levenor, 19 year old Cyrenian who lives in Neortoria.
I have to write that down in case I forget that too.
Placeholder description: The camera pans up to the sky showing it's strange blurry color mix and lines across it.
This place must be pretty far from my home, the sky looks very strange.
Placeholder description: The camera cuts to the lake as Mira tries to take some water.
Mira: (Sigh)
Placeholder description: The water drops slowly from her arm like slime.
Mira: This is definitely not drinkable...
Placeholder description: The camera cuts to mira below the tree hugging her legs
Mira: What can I even do?
Placeholder description: As she sits there a tentacle looking thing reaches towards her.
Mira: GAH!
Placeholder description: Mira grabs the axe from her bag and slices the tentacle, which bursts with slime.
Placeholder description: A monster emerges from the lake, as Mira takes a fighting stance.
=> END

~ sstay_back
Mira.Neutural: S-[wait=0.2]stay back...!
=> END

~ gahh
Mira.Neutural: GAHH![wait=1] GET OFF ME!
=> END

~ my_aura
Mira.Neutural: My Aura...
#Mira.Neutural: That's right, my [outline_size=12][outline_color=#6c3e18][color=#ff6b50]Heat magic[/color][/outline_color][/outline_size] should be strong against its [outline_size=12][outline_color=#21654e][color=#52f8b5]cyan aura[/color][/outline_color][/outline_size]![next=4]
Mira.Neutural: That's right, I can use my [outline_size=12][outline_color=#6c3e18][color=#ff6b50]Heat magic[/color][/outline_color][/outline_size] against it![next=5]
Mira.Neutural: Ok, I think I can do it.
=> END

~ what_this
There might be more of these monster up ahead, I should be careful...
do get_node("/root/Battle/Act/Actor0").hide()
set Global.Player.position = get_node("/root/Battle/Act/Actor0").global_position
do Global.Player.show()
Hm, what's that?
do Global.Player.move_dir(Vector2(2, 0), true, false)
do Event.wait(0.1)
set Global.Player.BodyState = NPC.CUSTOM
#do Global.Player.set_anim("PickUpRight", true, true)
do Item.add_item("WhiteSlime", "Mat")
do Event.wait(1)
This slime seems to contain some of that monster's essence.
do Global.Player.set_anim("IdleRight")
set get_node("/root/Battle/Act/Actor0").global_position = Global.Player.position
I feel like it might prove useful.
=> END