~ getting_dark
...It's getting a little dark.
=> END

~ that_should_do_it
That should do it.
=> END

~ was_that_a
It... ran away?[wait=0.4]\nWas that another monster?
Maybe I should follow it.
=> END

~ cant_dash_on_flame
Mira.Neutural: I can't dash and hold this flame at the same time.[next=4]
=> END

~ hey_wait
Mira.OpenMouth: Hey wait![next=2]
=> END

~ approach
It seems scared of me...
=> END

~ im_not_gonna_harm_you
Mira.Smile: Come on, it's all fine. I don't want to harm you.
=> END

~ as_lost_as_you
Mira.Neutural: I guess you're just as lost.
Mira.OpenMouth: This forest is not safe, we should look for a way out.
=> END

~ haha
Mira.Smile: Haha, you can have that if you want!
Mira.Smile: Here.
=> END

~ good_on_you
Mira.Smile: Looks good on you!
=> END

~ stay_back
Mira.OpenMouth: You stay behind me,\nI'll deal with it!
=> END!

~ skeleton
if not f("LookedAtSkeleton"):
	do f("LookedAtSkeleton", true)
	...There's no mistaking it, that's a skeleton.
	From the skull shape it seems human, but I don't want to look at it more than I have to.
else: 
	...Let's just move on.
=> END!

~ symbol
if flag_int("LookedAtTempleSymbol") == 0:
	do flag_progress("LookedAtTempleSymbol", 1)
	There is a symbol engraved on the ground.
	Looks like some sort of bird... with a clover head?
	...
	I just noticed that it's not perfectly symmetrical, which makes looking at it increasingly painful.
elif flag_int("LookedAtTempleSymbol") == 1: 
	do flag_progress("LookedAtTempleSymbol", 2)
	The pain grows.
elif flag_int("LookedAtTempleSymbol") == 2:
	do flag_progress("LookedAtTempleSymbol", 3)
	This place seems like an old abandoned temple, so this must be some sort of religious symbol.
	I don't recall ever seeing something like it though.
else: 
	Let's move on, I can't stand here looking at this all day.
=> END

~ statue_legs
Looks like a statue.
Or, to be more precise, the legs of a statue.
From the shape, these seem more like human legs, but it's hard to tell.
=> END

~ not_going_well
Mira.Neutural: Ow, this hurts...
Mira.Neutural: Do I have anything that could heal me?
=> END

~ going_nowhere
Mira.Neutural: If this goes on...
Mira.Neutural: Hey, I think we might have to run away!
=> END

~ amazing
Mira.Neutural: Woah, you can use healing magic!?
Mira.Neutural: We might have a chance like this!
Alcine: (happy noises)
=> END

~ got_through_that
Mira.Neutural: We should be safe now.
Mira.Neutural: If it wasn't for you, I'd be done for.
Mira.Neutural: We should stick together for now, [wait=0.5]umm...
Mira.Neutural: Wait, do you have a name?
Mira.Neutural: [next]
do bubble("Question", "Alcine")
[wait=1] [next=auto]
Mira.Neutural: Oh right, you can't talk.\nBut I need to call you something...
Mira.Neutural: Ok, I'll come up with a name and you tell me if you like it. Alright?

~ what_about
[wait=0.1] [next=auto]
do Area.get_node("AlcineNaming").start()
if alcine() == "Alcine":
	"Alcine". I think that's the best name I can think of.
elif alcine() == "Pikachu":
	Pika pika?
elif alcine() == "Raichu":
	Rai?
elif alcine() == "Watery":
	Very straight forward.
elif alcine() == "Mario":
	I maybe I should name them Sonic instead.
elif alcine() == "Sonic":
	I'd rather just name them Mario.
elif alcine() == "Sans":
	(deep breath)[wait=1] SA-[wait=0.1][next]
	Shall I use this name?
elif alcine() == "Journal":
	And then she said "It's journaling time!" and journaled all over them.
elif alcine() == "Name":
	Name?
elif alcine() == "Gaster":
	I don't speak hands.
elif alcine() == "Luigi":
	Respectable.
elif alcine() == "Rai":
	;3
elif alcine() == "Iris":
	Truly.
elif alcine() == "Alcin":
	Silent letters are for loosers.
elif alcine() == "Chip":
	That's the way it is.
elif alcine() == "Harold":
	har har, very funny
elif alcine() == "Bob":
	The true name?
elif alcine() == "Alcinoe":
	A godly name.
elif alcine() == "Alci":
	Short and sweet.
elif alcine() == "Alc":
	Maybe too short?
elif alcine() == "Al":
	Weird.
elif alcine() == "Alcaine":
	No, too far.
else:
	"{{alcine()}}". Should I go with this?
- Use this name
	do Area.get_node("AlcineNaming").hide()
	=> use_name
- Let's rethink this
	=> what_about

~ use_name
Mira.Neutural: What about "{{alcine()}}"?
Alcine: (nod)
do npc("P").look_to(Vector2(1, 0))
Mira.Neutural: Alright then {{alcine()}}, let's go together from here on.
=> END

~ a_bridge
Mira.Neutural: Oh a bridge.
Mira.Neutural: Seems like this is our way out of this forest.
=> END